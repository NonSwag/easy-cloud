/*
 * MiniCloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"errors"
	"io"
	"net/http"

	"github.com/TheNextLvl-net/mini-cloud/daemon/main/src/go/daemon"
)

// TemplateApiService is a service that implements the logic for the TemplateApiServicer
// This service should implement the business logic for every endpoint for the TemplateApi API.
// Include any external packages or services that will be required by this service.
type TemplateApiService struct {
	daemon *daemon.Daemon
}

// NewTemplateApiService creates a default api service
func NewTemplateApiService(daemon *daemon.Daemon) TemplateApiServicer {
	return &TemplateApiService{daemon}
}

// CreateTemplate - Create a new template
func (s *TemplateApiService) CreateTemplate(ctx context.Context, name string, body io.ReadCloser) (ImplResponse, error) {
	// TODO - update CreateTemplate with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, Template{}) or use other options such as http.Ok ...
	//return Response(201, Template{}), nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTemplate method not implemented")
}

// DownloadTemplate - Downloads the template
func (s *TemplateApiService) DownloadTemplate(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update DownloadTemplate with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	//return Response(200, *os.File{}), nil

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DownloadTemplate method not implemented")
}

// GetTemplate - Get the template
func (s *TemplateApiService) GetTemplate(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update GetTemplate with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Template{}) or use other options such as http.Ok ...
	//return Response(200, Template{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTemplate method not implemented")
}

// GetTemplates - Get all templates
func (s *TemplateApiService) GetTemplates(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetTemplates with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Template{}) or use other options such as http.Ok ...
	//return Response(200, []Template{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTemplates method not implemented")
}

// RemoveTemplate - Delete an existing template
func (s *TemplateApiService) RemoveTemplate(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update RemoveTemplate with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveTemplate method not implemented")
}

// UpdateTemplate - Update the files of the template
func (s *TemplateApiService) UpdateTemplate(ctx context.Context, name string, body io.ReadCloser) (ImplResponse, error) {
	// TODO - update UpdateTemplate with the required logic for this service method.
	// Add api_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Template{}) or use other options such as http.Ok ...
	//return Response(200, Template{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTemplate method not implemented")
}
