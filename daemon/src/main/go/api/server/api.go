/*
 * MiniCloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"io"
	"net/http"

	"github.com/TheNextLvl-net/mini-cloud/daemon/main/src/go/api"
)

// ServerApiRouter defines the required methods for binding the api requests to a responses for the ServerApi
// The ServerApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServerApiServicer to perform the required actions, then write the service results to the http response.
type ServerApiRouter interface {
	CreateServer(http.ResponseWriter, *http.Request)
	GetServer(http.ResponseWriter, *http.Request)
	GetServers(http.ResponseWriter, *http.Request)
	RemoveServer(http.ResponseWriter, *http.Request)
	StartServer(http.ResponseWriter, *http.Request)
	StopServer(http.ResponseWriter, *http.Request)
}

// ServerGroupApiRouter defines the required methods for binding the api requests to a responses for the ServerGroupApi
// The ServerGroupApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServerGroupApiServicer to perform the required actions, then write the service results to the http response.
type ServerGroupApiRouter interface {
	CreateGroup(http.ResponseWriter, *http.Request)
	GetGroup(http.ResponseWriter, *http.Request)
	GetGroups(http.ResponseWriter, *http.Request)
	GetServersInGroup(http.ResponseWriter, *http.Request)
	RemoveGroup(http.ResponseWriter, *http.Request)
}

// SystemApiRouter defines the required methods for binding the api requests to a responses for the SystemApi
// The SystemApiRouter implementation should parse necessary information from the http request,
// pass the data to a SystemApiServicer to perform the required actions, then write the service results to the http response.
type SystemApiRouter interface {
	ListenEvents(http.ResponseWriter, *http.Request)
}

// TemplateApiRouter defines the required methods for binding the api requests to a responses for the TemplateApi
// The TemplateApiRouter implementation should parse necessary information from the http request,
// pass the data to a TemplateApiServicer to perform the required actions, then write the service results to the http response.
type TemplateApiRouter interface {
	CreateTemplate(http.ResponseWriter, *http.Request)
	DownloadTemplate(http.ResponseWriter, *http.Request)
	GetTemplate(http.ResponseWriter, *http.Request)
	GetTemplates(http.ResponseWriter, *http.Request)
	RemoveTemplate(http.ResponseWriter, *http.Request)
	UpdateTemplate(http.ResponseWriter, *http.Request)
}

// ServerApiServicer defines the api actions for the ServerApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServerApiServicer interface {
	CreateServer(context.Context, api.CreateServerRequest) (ImplResponse, error)
	GetServer(context.Context, string) (ImplResponse, error)
	GetServers(context.Context) (ImplResponse, error)
	RemoveServer(context.Context, string) (ImplResponse, error)
	StartServer(context.Context, string) (ImplResponse, error)
	StopServer(context.Context, string) (ImplResponse, error)
}

// ServerGroupApiServicer defines the api actions for the ServerGroupApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServerGroupApiServicer interface {
	CreateGroup(context.Context, api.ServerGroup) (ImplResponse, error)
	GetGroup(context.Context, string) (ImplResponse, error)
	GetGroups(context.Context) (ImplResponse, error)
	GetServersInGroup(context.Context, string) (ImplResponse, error)
	RemoveGroup(context.Context, string) (ImplResponse, error)
}

// SystemApiServicer defines the api actions for the SystemApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SystemApiServicer interface {
	ListenEvents(context.Context, api.EventsRequest) (ImplResponse, error)
}

// TemplateApiServicer defines the api actions for the TemplateApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TemplateApiServicer interface {
	CreateTemplate(context.Context, string, io.ReadCloser) (ImplResponse, error)
	DownloadTemplate(context.Context, string) (ImplResponse, error)
	GetTemplate(context.Context, string) (ImplResponse, error)
	GetTemplates(context.Context) (ImplResponse, error)
	RemoveTemplate(context.Context, string) (ImplResponse, error)
	UpdateTemplate(context.Context, string, io.ReadCloser) (ImplResponse, error)
}
